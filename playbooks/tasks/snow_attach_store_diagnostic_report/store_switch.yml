---
- name: Create ios-cli configuration file
  ansible.builtin.copy:
    dest: /home/runner/.ios-cli.yml
    content: |
      apikey: "{{ panw_api_token }}"
      user: "{{ ansible_user }}"
      password: "{{ ansible_ssh_pass }}"
  no_log: true

- name: Store Switch | Fetch name server configuration
  ansible.builtin.command: >
    {{ playbook_dir }}/library/go/ios-cli device run commands
      --insecure
      --expect-timeout 60
      --command "show running-config | include ip name-server 10.10.10.10"
      {{ store_switch }}
  register: name_server
  changed_when: false
  ignore_errors: true

- name: Store Switch | Fetch domain lookup configuration
  ansible.builtin.command: >
    {{ playbook_dir }}/library/go/ios-cli device run commands
      --insecure
      --expect-timeout 60
      --command "show running-config | include no ip domain-lookup"
      {{ store_switch }}
  register: domain_lookup
  changed_when: false
  ignore_errors: true

- name: Store Switch | Enable DNS lookups
  ansible.builtin.command: >
    {{ playbook_dir }}/library/go/ios-cli device run commands
      --insecure
      --expect-timeout 60
      --command "configure terminal"
      --command "ip name-server 10.10.10.10"
      --command "ip domain-lookup"
      --command "end"
      --command "copy running-config startup-config"
      {{ store_switch }}
  when: name_server.stdout_lines[5] == "" or domain_lookup.stdout_lines[5] == "no ip domain-lookup"
  ignore_errors: true

- name: Store Switch | Fetch switch uptime
  ansible.builtin.command: >
    {{ playbook_dir }}/library/go/ios-cli device run commands
      --insecure
      --expect-timeout 60
      --command "show version | include uptime"
      {{ store_switch }}
  register: store_switch_uptime
  changed_when: false
  ignore_errors: true

- name: Store Switch | Trace route to the internet
  ansible.builtin.command: >
    {{ playbook_dir }}/library/go/ios-cli device run commands
      --insecure
      --expect-timeout 60
      --command "traceroute 8.8.8.8"
      {{ store_switch }}
  register: store_internet_egress
  changed_when: false
  ignore_errors: true

- name: Store Switch | Test DNS resolution
  ansible.builtin.command: >
    {{ playbook_dir }}/library/go/ios-cli device run commands
      --insecure
      --expect-timeout 60
      --command "ping {{ verifone_fqdn }} repeat 1"
      {{ store_switch }}
  register: store_switch_dns_test
  changed_when: false
  ignore_errors: true

- name: Store Switch | Set verifone_ip fact
  ansible.builtin.set_fact:
    verifone_ip: "{{ store_switch_dns_test.stdout | default('') | regex_search('(?<=ICMP Echos to )\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}', multiline=False, ignorecase=False) }}"

- name: Store Switch | Connect to Williams Sonoma site
  ansible.builtin.command: >
    {{ playbook_dir }}/library/go/ios-cli device run commands
      --insecure
      --expect-timeout 60
      --command "connect www.williams-sonoma.com 443"
      {{ store_switch }}
  register: store_switch_connect_ws_site
  changed_when: false
  ignore_errors: true

- name: Store Switch | Connect to Store Wide Web site
  ansible.builtin.command: >
    {{ playbook_dir }}/library/go/ios-cli device run commands
      --insecure
      --expect-timeout 60
      --command "connect {{ storesweb_fqdn }} 443"
      {{ store_switch }}
  register: store_switch_connect_storesweb
  changed_when: false
  ignore_errors: true

- name: Store Switch | Connect to Verifone API
  ansible.builtin.command: >
    {{ playbook_dir }}/library/go/ios-cli device run commands
      --insecure
      --expect-timeout 60
      --command "connect {{ verifone_fqdn }} 443"
      {{ store_switch }}
  register: store_switch_connect_verifone
  changed_when: false
  ignore_errors: true
