---
- name: Attach Store Diagnostic Report to ServiceNow Incident
  hosts: localhost
  gather_facts: false
  roles:
    - Output

  tasks:
    - name: Import tasks
      ansible.builtin.include_tasks: "{{ item }}"
      loop:
        - tasks/snow_attach_store_diagnostic_report/servicenow.yml
        - tasks/snow_attach_store_diagnostic_report/store_switch.yml
        - tasks/snow_attach_store_diagnostic_report/rocklin_mpls_router.yml
        - tasks/snow_attach_store_diagnostic_report/firewall.yml
        - tasks/snow_attach_store_diagnostic_report/vmanage.yml
        - tasks/snow_attach_store_diagnostic_report/mist.yml

  post_tasks:
    - name: Render diagnostic report
      ansible.builtin.template:
        src: templates/snow_attach_store_diagnostic_report.j2
        dest: "{{ output_dir }}/{{ snow_incident | lower }}_store_diagnostic_report_{{ timestamp }}.txt"

    - name: Attach diagnostic report to incident
      servicenow.itsm.incident:
        instance:
          host: "{{ snow_instance }}"
          username: "{{ snow_username }}"
          password: "{{ snow_password }}"
        number: "{{ snow_incident }}"
        attachments:
          - path: "{{ output_dir }}/{{ snow_incident | lower }}_store_diagnostic_report_{{ timestamp }}.txt"

    - name: Set work_notes fact
      ansible.builtin.set_fact:
        work_notes: |
          Store Switch:<br />
          {% if not store_switch_ping.stderr | default("failed") %}
          {% if store_switch_ping.stdout | regex_search("Success rate is [1-9]", multiline=True, ignorecase=False) %}
            Pingable: Yes<br />
          {% else %}
            Pingable: No ðŸ”´<br />
          {% endif %}
          {% else %}
            Pingable: N/A ðŸ”´<br />
          {% endif %}
          {% if not store_switch_uptime.stderr | default("failed") %}
            Uptime: {{ store_switch_uptime.stdout_lines[5] | regex_replace("^.+uptime is ", "") }}<br />
          {% else %}
            Uptime: N/A ðŸ”´<br />
          {% endif %}
          Store Router:<br />
          {% if not store_router_ping.stderr | default("failed") %}
          {% if store_router_ping.stdout | regex_search("Success rate is [1-9]", multiline=True, ignorecase=False) %}
            Pingable: Yes<br />
          {% else %}
            Pingable: No ðŸ”´<br />
          {% endif %}
          {% else %}
            Pingable: N/A ðŸ”´<br />
          {% endif %}
          {% if not store_subnet_lookup.stderr | default("failed") %}
          {% if store_subnet_lookup.stdout_lines[5] | regex_search(store_subnet, multiline=False, ignorecase=False) %}
          MPLS Path: Up<br />
          {% else %}
          MPLS Path: Down ðŸ”´<br />
          {% endif %}
          {% else %}
          MPLS Path: N/A ðŸ”´<br />
          {% endif %}
          {% if not sdwan_store %}
          {% if not store_bb_tunnel_status.stderr | default("failed") %}
          {% if store_bb_tunnel_status.stdout | regex_search("prefixes\s[1-9]\d*\s*$", multiline=True, ignorecase=False) %}
          Broadband Tunnel: Up<br />
          {% else %}
          Broadband Tunnel: Down ðŸ”´<br />
          {% endif %}
          {% else %}
          Broadband Tunnel: N/A ðŸ”´<br />
          {% endif %}
          {% endif %}
          {% if sdwan_store %}
          Cisco SD-WAN:<br />
            Tunnel Status:<br />
          {% if asbc1_hub_1_sessions.json.data | default("") %}
              Ashburn Hub Router:<br />
          {% for s in asbc1_hub_1_sessions.json.data %}
                {{ s["local-color"] | title }}: {% if s.state == "up" %}Up<br />{% else %}{{ s.state | title }} ðŸ”´<br />{% endif +%}
          {% endfor %}
          {% else %}
              Ashburn Hub Router: N/A ðŸ”´<br />
          {% endif %}
          {% if rkat1_hub_1_sessions.json.data | default("") %}
              Rocklin Hub Router 1:<br />
          {% for s in rkat1_hub_1_sessions.json.data %}
                {{ s["local-color"] | title }}: {% if s.state == "up" %}Up<br />{% else %}{{ s.state | title }} ðŸ”´<br />{% endif +%}
          {% endfor %}
          {% else %}
              Rocklin Hub Router 1: N/A ðŸ”´<br />
          {% endif %}
          {% if rkat1_hub_2_sessions.json.data | default("") %}
              Rocklin Hub Router 2:<br />
          {% for s in rkat1_hub_2_sessions.json.data %}
                {{ s["local-color"] | title }}: {% if s.state == "up" %}Up<br />{% else %}{{ s.state | title }} ðŸ”´<br />{% endif +%}
          {% endfor %}
          {% else %}
              Rocklin Hub Router 2: N/A ðŸ”´<br />
          {% endif %}
          {% if tloc_stats.json.data | default("") %}
            TLOC Stats (Past Hour):<br />
          {% set remote_colors =  [ "biz-internet", "private1", "private2" ] %}
          {% set properties =  [ "Jitter", "Latency", "Loss_Percentage", "vQoE_Score" ] %}
          {% for c in remote_colors %}
              {{ c | title }}:<br />
          {% for p in properties %}
          {% set stats =  tloc_stats.json.data | selectattr("remote_color", "equalto", c) | map(attribute=p | lower) | list %}
          {% set stats_count = stats | length %}
          {% if stats_count > 0 %}
          {% set stats_mean = "%.2f" | format(stats | sum / stats_count) %}
          {% if p == "vQoE_Score" and stats_mean | int <= 5 %}
                {{ p | replace("_", " ") }}: {{ stats_mean }} ðŸ”´<br />
          {% else %}
                {{ p | replace("_", " ") }}: {{ stats_mean }}<br />
          {% endif %}
          {% else %}
                {{ p | replace("_", " ") }}: N/A ðŸ”´<br />
          {% endif %}
          {% endfor %}
          {% endfor %}
          {% else %}
            TLOC Stats (Past Hour): N/A ðŸ”´<br />
          {% endif %}
          {% endif %}
          {% if mist_store %}
          Mist Wireless:<br />
          {% if mist_site_stats.json | default("") %}
            Site: {{ mist_site_stats.json.name }}<br />
          {% if mist_site_stats.json.num_ap_connected == mist_site_stats.json.num_ap %}
            Connected APs: {{ mist_site_stats.json.num_ap_connected }}/{{ mist_site_stats.json.num_ap }}<br />
          {% else %}
            Connected APs: {{ mist_site_stats.json.num_ap_connected }}/{{ mist_site_stats.json.num_ap }} ðŸ”´<br />
          {% endif %}
            Connected Clients: {{ mist_site_stats.json.num_clients }}<br />
          {% else %}
            Site: N/A ðŸ”´<br />
            Connected APs: N/A ðŸ”´<br />
            Connected Clients: N/A ðŸ”´<br />
          {% endif %}
          {% if mist_wlans.json | default("") %}
            SSIDs:<br />
          {% for wlan in mist_wlans.json %}
              {{ wlan.ssid }}:<br />
                Enabled: {% if wlan.enabled %}Yes{% else %}No{% endif %}<br />
                Connected Clients: {{ mist_client_stats.json | selectattr('ssid', 'match', wlan.ssid) | length }}<br />
          {% endfor %}
          {% else %}
            SSIDs: N/A ðŸ”´<br />
          {% endif %}
          {% if mist_client_stats.json | default("") %}
          {% set rssi =  mist_client_stats.json | map(attribute='rssi') | sort %}
            RSSI:<br />
              Best: {% if rssi[-1] | int > -70 %}{{ rssi[-1] }}{% else %}{{ rssi[-1] }} ðŸ”´{% endif %}<br />
              Worst: {% if rssi[0] | int > -70 %}{{ rssi[0] }}{% else %}{{ rssi[0] }} ðŸ”´{% endif %}<br />
              Median: {% if rssi[rssi | length // 2] | int > -70 %}{{ rssi[rssi | length // 2] }}{% else %}{{ rssi[rssi | length // 2] }} ðŸ”´{% endif %}<br />
              Top 5 Worst:<br />
          {% for c in (mist_client_stats.json | sort(attribute="rssi"))[:5] %}
          {% if c.hostname | default("") and c.hostname | default("") != "\"\"" %}
                {{ c.ip | default("0.0.0.0") }} ({{ c.hostname }}):<br />
          {% else %}
                {{ c.ip | default("0.0.0.0") }}:<br />
          {% endif %}
                  RSSI: {% if c.rssi | int > -70 %}{{ c.rssi }}{% else %}{{ c.rssi }} ðŸ”´{% endif %}<br />
                  SNR: {% if c.snr | int > 25 %}{{ c.snr }}{% else %}{{ c.snr }} ðŸ”´{% endif %}<br />
                  SSID: {{ c.ssid }}<br />
                  Channel: {{ c.channel }}<br />
                  MAC Address: {{ c.mac }}<br />
                  Username: {{ c.username | default("") }}<br />
          {% endfor %}
          {% else %}
            RSSI: N/A ðŸ”´<br />
          {% endif %}
          {% endif %}
          {% if not store_internet_egress.stderr | default("failed") %}
          {% if store_internet_egress.stdout | regex_search("8.8.8.8.+msec", multiline=True, ignorecase=False) or store_switch_connect_ws_site.stdout | regex_search("Open", multiline=True, ignorecase=False) %}
          Internet Reachable: Yes<br />
          {% else %}
          Internet Reachable: No ðŸ”´<br />
          {% endif %}
          {% else %}
          Internet Reachable: N/A ðŸ”´<br />
          {% endif %}
          {% if not store_internet_egress.stderr | default("failed") %}
          {% if store_internet_egress.stdout | regex_search("asgi1", multiline=True, ignorecase=False) %}
          Internet Egress: Ashburn<br />
          {% elif store_internet_egress.stdout | regex_search("rkat1", multiline=True, ignorecase=False)  %}
          Internet Egress: Rocklin<br />
          {% elif store_internet_egress.stdout | regex_search("sast1", multiline=True, ignorecase=False)  %}
          Internet Egress: Sacramento<br />
          {% else %}
          Internet Egress: Unknown ðŸ”´<br />
          {% endif %}
          {% else %}
          Internet Egress: N/A ðŸ”´<br />
          {% endif %}
          {% if not store_switch_dns_test.stderr | default("failed") %}
          {% if store_switch_dns_test.stdout | regex_search("Translating.+domain\sserver\s\(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\)\s\[OK\]", multiline=True, ignorecase=False) %}
          DNS Resolution Functional: Yes<br />
          {% else %}
          DNS Resolution Functional: No ðŸ”´<br />
          {% endif %}
          {% else %}
          DNS Resolution Functional: N/A ðŸ”´<br />
          {% endif %}
          {% if not store_switch_connect_ws_site.stderr | default("failed") %}
          {% if store_switch_connect_ws_site.stdout | regex_search("Open", multiline=True, ignorecase=False) %}
          Williams Sonoma Site (williams-sonoma.com) Reachable: Yes<br />
          {% else %}
          Williams Sonoma Site (williams-sonoma.com) Reachable: No ðŸ”´<br />
          {% endif %}
          {% else %}
          Williams Sonoma Site (williams-sonoma.com) Reachable: N/A ðŸ”´<br />
          {% endif %}
          {% if not store_switch_connect_storesweb.stderr | default("failed") %}
          {% if store_switch_connect_storesweb.stdout | regex_search("Open", multiline=True, ignorecase=False) %}
          Store Wide Web Site ({{ storesweb_fqdn }}) Reachable: Yes<br />
          {% else %}
          Store Wide Web Site ({{ storesweb_fqdn }}) Reachable: No ðŸ”´<br />
          {% endif %}
          {% else %}
          Store Wide Web Site ({{ storesweb_fqdn }}) Reachable: N/A ðŸ”´<br />
          {% endif %}
          {% if not store_switch_connect_verifone.stderr | default("failed") %}
          {% if store_switch_connect_verifone.stdout | regex_search("Open", multiline=True, ignorecase=False) %}
          Verifone API (api.vfipayna.com) Reachable: Yes<br />
          {% else %}
          Verifone API (api.vfipayna.com) Reachable: No ðŸ”´<br />
          {% endif %}
          {% else %}
          Verifone API (api.vfipayna.com) Reachable: N/A ðŸ”´<br />
          {% endif %}
          Verifone active firewall sessions:<br />
          {% if not active_verifone_sessions_ashburn.stderr | default("failed") %}
            Ashburn: {{ active_verifone_sessions_ashburn.stdout_lines | length - 1 }}<br />
          {% else %}
            Ashburn: N/A ðŸ”´<br />
          {% endif %}
          {% if not active_verifone_sessions_rocklin.stderr | default("failed") %}
            Rocklin: {{ active_verifone_sessions_rocklin.stdout_lines | length - 1 }}<br />
          {% else %}
            Rocklin: N/A ðŸ”´<br />
          {% endif %}
          {% if not active_verifone_sessions_sacramento.stderr | default("failed") %}
            Sacramento: {{ active_verifone_sessions_sacramento.stdout_lines | length - 1 }}<br />
          {% else %}
            Sacramento: N/A ðŸ”´<br />
          {% endif %}

    - name: Update incident work notes
      servicenow.itsm.incident:
        instance:
          host: "{{ snow_instance }}"
          username: "{{ snow_username }}"
          password: "{{ snow_password }}"
        number: "{{ snow_incident }}"
        other:
          work_notes: |
            [code]<h3>Store Analysis</h3><pre style="background-color: transparent; border-width: 0">[/code]
            [code]{{ work_notes }}[/code]
            [code]</pre>[/code]
